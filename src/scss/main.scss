// @import "../../node_modules/bootstrap/scss/bootstrap.scss";

$items-count: 360; // corresponds to the number of divs in your HTML

// Define animation
@keyframes move {
  0% {
    transform: scaleY(0);
  }

  100% {
    transform: scaleY(1.4);
    opacity: 0;
  }
}

// Mixin to use animation
@mixin add-move-animation($duration, $delay) {
  animation-name: move;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-timing-function: cubic-bezier(1, 0.1, 0.795, 0.5);
  //   animation-play-state: paused;
}

body {
  background-color: darkslategray;
  margin: 0;
}

.items-container {
  display: grid;
  grid-template-columns: repeat($items-count, 1fr);
  grid-template-rows: 1fr;
  height: 80vh;
  width: 100vw;
}
.item {
  border-radius: 1rem;
  border: black 1px solid;
}

.baby-item-1 {
  width: 1fr;
  height: 20vh;
  background-color: salmon;
}

// For loop to randomize values for each div bar
@for $i from 1 through $items-count {
  .item:nth-child(#{$i}) {
    background: pink;
    // random() will return a number between 1-100 with no argument being passed to it, or when you pass in a single integer parameter to define the upper limit. random(20) will return a number between 1-20.
    height: random(60) + 10 + vh;

    transform-origin: 0 0;
    @include add-move-animation(random(5) + 4 + s, random(3) - 1 + s);
  }
}
.item:nth-child(even) {
  background: transparent;
}
